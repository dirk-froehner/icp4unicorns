AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM Template for the Unicorn Management Service.

# ---------------------------------------------------------------------------------------------------------------------
# Parameters.
# ---------------------------------------------------------------------------------------------------------------------

Parameters:
  Stage:
    Type: "String"
    Description: "Environment stage (dev, test, ..., prod)"
    Default: "dev"
  Workload:
    Type: "String"
    Description: "Name of the overall workload this service belongs to"
    Default: "submit-ride-completion"
  Service:
    Type: "String"
    Description: "Name of this service"
    Default: "unicorn-management-service"
  LogLevel:
    Type: "String"
    Description: "Log level for Lambda functions"
    Default: "DEBUG"

# ---------------------------------------------------------------------------------------------------------------------
# Mappings.
# ---------------------------------------------------------------------------------------------------------------------

# ---------------------------------------------------------------------------------------------------------------------
# Globals.
# ---------------------------------------------------------------------------------------------------------------------

Globals:
  Function:
    Runtime: "python3.8"
    Timeout: 5
    Tracing: "Active"
    MemorySize: 512
    Tags:   
      Stage:    !Ref "Stage"
      Workload: !Ref "Workload"
      Service:  !Ref "Service"
    Environment:
      Variables:
        STAGE:     !Ref "Stage"
        WORKLOAD:  !Ref "Workload"
        SERVICE:   !Ref "Service"
        LOG_LEVEL: !Ref "LogLevel"

        RIDES_STORE_TABLE_NAME: !Ref "RidesStoreTable"

# ---------------------------------------------------------------------------------------------------------------------
# Resources.
# ---------------------------------------------------------------------------------------------------------------------

Resources:

  # Persistence resources.

  RidesStoreTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${Stage}-${Workload}-${Service}-RidesStoreTable"
      AttributeDefinitions: 
        - AttributeName: "customer-id"
          AttributeType: "S"
        - AttributeName: "submitted-at"
          AttributeType: "S"
      KeySchema: 
        - AttributeName: "customer-id"
          KeyType: "HASH"
        - AttributeName: "submitted-at"
          KeyType: "RANGE"
      ProvisionedThroughput: 
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      Tags:
        - Key: "Stage"
          Value: !Sub "${Stage}"
        - Key: "Workload"
          Value: !Sub "${Workload}"
        - Key: "Service"
          Value: !Sub "${Service}"

  # Messaging resources.

  RideCompletionTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "${Stage}-${Workload}-RideCompletionTopic"
      Tags:
        - Key: "Stage"
          Value: !Sub "${Stage}"
        - Key: "Workload"
          Value: !Sub "${Workload}"
        - Key: "Service"
          Value: !Sub "${Service}"

  # User API resources.

  SubmitRideCompletionFunction:
    Depends: [ "RidesStoreTable", "RideCompletionTopic" ]
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: "src/api/user/"
      Handler: "submit_ride_completion.lambda_handler"
      Environment:
        Variables:
          RIDE_COMPLETION_TOPIC_NAME: !GetAtt "RideCompletionTopic.TopicName"
          RIDE_COMPLETION_TOPIC_ARN: !Ref "RideCompletionTopic"
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref "RidesStoreTable"
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt "RideCompletionTopic.TopicName"
      Events:
        SubmitRequestEvent:
          Type: Api
          Properties:
            Path: "/api/user/submit-ride-completion"
            Method: post

  RetrieveCompletedRideFunction:
    Depends: "RidesStoreTable"
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: "src/api/user/"
      Handler: "retrieve_completed_ride.lambda_handler"
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref "RidesStoreTable"
      Events:
        SubmitRequestEvent:
          Type: Api
          Properties:
            Path: "/api/user/retrieve-completed-ride"
            Method: get

  # -------------------------------------------------------------------------------------------------------------------
  # SSM Parameters for shared resources in this workload.
  # -------------------------------------------------------------------------------------------------------------------

  # Parameters for the ride completion topic.

  SSMParameter4RideCompletionTopicArn:
    Type: "AWS::SSM::Parameter"
    Properties:
      Type: String
      Name: !Sub "/${Stage}/${Workload}/sns/ride-completion-topic/arn"
      Description: "ARN of the shared SNS topic for ride completion notifications"
      Value: !Ref "RideCompletionTopic"
      Tags:
        Stage:    !Ref "Stage"
        Workload: !Ref "Workload"
        Service:  !Ref "Service"

  SSMParameter4RideCompletionTopicName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Type: String
      Name: !Sub "/${Stage}/${Workload}/sns/ride-completion-topic/name"
      Description: "Name of the shared SNS topic for ride completion notifications"
      Value: !GetAtt "RideCompletionTopic.TopicName"
      Tags:
        Stage:    !Ref "Stage"
        Workload: !Ref "Workload"
        Service:  !Ref "Service"

# ---------------------------------------------------------------------------------------------------------------------
# Outputs.
# ---------------------------------------------------------------------------------------------------------------------

Outputs:

  # Outputs for RidesStore.
  
  RidesStoreTableName:
    Description: "Name of the rides store table"
    Value: !Ref "RidesStoreTable"
  RidesStoreTableArn:
    Description: "ARN of the rides store table"
    Value: !GetAtt "RidesStoreTable.Arn"

  # Outputs for RideCompletionTopic.
  
  RideCompletionTopicArn:
    Description: "ARN of the ride completion notification topic"
    Value: !Ref "RideCompletionTopic"
  RideCompletionTopicName:
    Description: "Name of the ride completion notification topic"
    Value: !GetAtt "RideCompletionTopic.TopicName"
    
  # Outputs for Lambda functions.
  
  SubmitRideCompletionFunctionArn:
    Description: "ARN of the SubmitRideCompletionFunction"
    Value: !GetAtt "SubmitRideCompletionFunction.Arn"
  SubmitRideCompletionFunctionRoleArn:
    Description: "ARN of the IAM role implicitly created for the SubmitRideCompletionFunction"
    Value: !GetAtt "SubmitRideCompletionFunctionRole.Arn"

  RetrieveCompletedRideFunctionArn:
    Description: "ARN of the RetrieveCompletedRideFunction"
    Value: !GetAtt "SubmitRideCompletionFunction.Arn"
  RetrieveCompletedRideFunctionRoleArn:
    Description: "ARN of the IAM role implicitly created for the RetrieveCompletedRideFunction"
    Value: !GetAtt "SubmitRideCompletionFunctionRole.Arn"

  # Outputs for APIs.
  
  ServiceApiBaseUrl:
    Description: "API Gateway base URL for the API resources of this service"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"

# ---------------------------------------------------------------------------------------------------------------------
